openapi: 3.0.3
info:
  title: FamiliesShare API
  description: FamiliesShare API
  version: 1.0.0
servers:
  - url: 'http://127.0.0.1:8080/'

paths:
  /group/{groupId}/activities/{activityId}/timeslots/{timeslotId}/invites:
    post:
      tags:
        - Invites
      summary: Create a new invite
      operationId: createInvite
      parameters:
        - in: path
          name: groupId
          description: The group id
          required: true
          schema:
            type: string
        - in: path
          name: activityId
          description: The activity id
          required: true
          schema:
            type: string
        - in: path
          name: timeslotId
          description: The timeslot id
          required: true
          schema:
            type: string

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invitees:
                  type: array
                items:
                  type: string

      responses:
        '200':
          description: Invite created
        '401':
          description: Unauthorized


  /user/{userId}/invites:
    get:
      tags:
        - Invites
      summary: Get all invites for a user
      operationId: getInvites
      parameters:
        - in: path
          name: userId
          description: The user id
          required: true
          schema:
            type: string

        - in: query
          name: status
          description: The status of the invite
          required: false
          schema:
            type: string
            enum:
              - pending
              - accepted

      responses:
        '200':
          description: Invites found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invite'
        '401':
          description: Unauthorized
        '404':
          description: Not found


  /user/{userId}/invites/{timeslot_id}/accept:
    post:
      tags:
        - Invites
      summary: Accept an invite
      operationId: acceptInvite
      parameters:
        - in: path
          name: userId
          description: The user id
          required: true
          schema:
            type: string

        - in: path
          name: timeslot_id
          description: The timeslot id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invite accepted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /user/{userId}/invites/{timeslot_id}/decline:
    post:
      tags:
        - Invites
      summary: Decline an invite
      operationId: declineInvite
      parameters:
        - in: path
          name: userId
          description: The user id
          required: true
          schema:
            type: string

        - in: path
          name: timeslot_id
          description: The timeslot id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invite declined
        '401':
          description: Unauthorized

  /group/{groupId}/activityrequests:
    parameters:
      - in: path
        name: groupId
        description: Group ID
        required: true
        schema:
          type: string
    post:
      tags:
        - Activity Requests
      summary: Create new activity request
      operationId: createActivityRequest
      requestBody:
        $ref: '#/components/requestBodies/ActivityRequest'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '409':
          description: User already exists

    get:
      tags:
        - Activity Requests
      summary: Get all activity requests of the authenticated user
      operationId: getActivityRequests
      responses:
        '401':
          description: Unauthorized
        '200':
          description: Array of activity requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityRequest'

  /group/{groupId}/activityrequests/{activityRequestId}:
    parameters:
      - in: path
        name: groupId
        description: Group ID
        required: true
        schema:
          type: string
      - in: path
        name: activityRequestId
        description: Activity Request ID
        required: true
        schema:
          type: string

    get:
      tags:
        - Activity Requests
      summary: Get activity request by id
      operationId: getActivityRequestById
      responses:
        '401':
          description: Unauthorized
        '200':
          description: The requested activity request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityRequest'

    patch:
      tags:
        - Activity Requests
      summary: Update activity request
      operationId: updateActivityRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
      responses:
        '401':
          description: Unauthorized
        '404':
          description: Activity request not found
        '200':
          description: The updated activity request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityRequest'

    delete:
      tags:
        - Activity Requests
      summary: Delete activity request
      operationId: deleteActivityRequest
      responses:
        '401':
          description: Unauthorized
        '200':
          description: Activity Request Deleted


  /group/{groupId}/activityrequests/{activityRequestId}/compatibleTimeslots:
    parameters:
      - in: path
        name: groupId
        description: Group ID
        required: true
        schema:
          type: string
      - in: path
        name: activityRequestId
        description: Activity Request ID
        required: true
        schema:
          type: string
          

    get:
      tags:
        - Activity Requests
      summary: Get all compatible timeslots of the activity request
      operationId: getCompatibleTimeslots
      responses:
        '401':
          description: Unauthorized
        '404':
          description: Activity request not found
        '200':
          description: Array of compatible timeslots

components:
  schemas:
    Invite:
      type: object
      properties:
        timeslot_id:
          type: string

        inviter_id:
          type: string

        invitee_id:
          type: string

        group_id:
          type: string

        activity_id:
          type: string

        status:
          type: string

    ActivityRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        color:
          type: string
        children:
          type: array
          items:
            type: string
          minItems: 1
        date:
          type: string
        startTime:
          type: string
        endTime:
          type: string

  requestBodies:
    ActivityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivityRequest'
