# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Integration Tests

on:
  pull_request:
    paths:
      - 'src/**'


jobs:
  run_tests:
    name: Run tests
    runs-on: ubuntu-latest
    environment: Test

    strategy:
      matrix:
        node-version: ['14', 'lts/*']
        mongo-version: ['4.4', '5.0' ]
      fail-fast: false
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      mongodb:
        image: mongo:${{ matrix.mongo-version }}
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.DB_USER }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v2

    - name: Decrypt Secrets
      run: gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.GPG_PASSPHRASE }} --output src/google_api_keyfile.json .github/workflows/google_api_keyfile.json.gpg

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Doppler CLI
      uses: DopplerHQ/cli-action@v1

    - name : Install Node.js Dependencies
      run: npm ci

    - name : Run Tests
      run: doppler run npm test
      env:
        DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
      continue-on-error: true

#    Enable to debug MongoDB problems
#    - name: Docker log
#      run: docker logs "${{ job.services.mongodb.id }}"

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: reports/mocha.json

    - name : Generate coverage report
      run: npm run coverage

    - name: Upload to Coveralls
      uses: coverallsapp/github-action@1.1.3
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: coverage/lcov.info
        flag-name: Node_${{ matrix.node-version }},Mongo_${{ matrix.mongo-version }}
        parallel: true

    - name : Upload to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        files: coverage/lcov.info
        flags: Node_${{ matrix.node-version }},Mongo_${{ matrix.mongo-version }}

    - name: Generate tests report
      uses: dorny/test-reporter@v1.5.0
      with:
        name: Tests report (Node ${{ matrix.node-version }}, Mongo ${{ matrix.mongo-version }}  )
        path: reports/mocha.json                      # Path to test results
        reporter: mocha-json                          # Format of test results
        #fail-on-error: false                          # Fail the workflow if any test fails


  finish:
    name: Finish
    needs: run_tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true